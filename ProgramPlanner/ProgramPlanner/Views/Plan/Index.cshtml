<<<<<<< Updated upstream
ï»¿@model IEnumerable<ProgramPlanner.Models.StudyArea>

@{
    Layout = null;

}

<!DOCTYPE html>
<!-- -->
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Uni Plan</title>

    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/Plan.css")
    <link rel="stylesheet" href="~/Content/jquery-ui.min.css">
</head>
<body>
    <script src="~/Content/scripts/jquery.js"></script>
    <script src="~/Content/scripts/jquery-ui.min.js"></script>
    <script src="~/Content/scripts/jquery.shapeshift.js"></script>

    <div id="headerRow" class="row">
        <div id="imgHeaderContainer" class="col-md-2 col-md-offset-1">
            <img id="imgHeader" src="~/Content/images/adaymaycome.jpg" />
        </div>
        <h1>Various Instructions and pictures shall go here</h1>
    </div>
    <!--Row at top that contains the semester heading names -->
    <div id="semesterRow" class="row">

    </div>

    <div id="mainRow" class="row">
        <!--Main row with most page items-->
        <!--Main menu on right of page -->
        <div id="planMenu" class="col-md-3">
            <div id="tabs">
                <ul>
                    <li><a href="#tabs-1">Directed</a></li>
                    <li><a href="#tabs-2">Electives</a></li>
                    <li><a href="#tabs-3">Options</a></li>
                </ul>
                <div id="tabs-1">
                    <!--Directeds tab -->
                    <div class="draggable directeds">Course 1</div>
                    <div class="draggable directeds">Course 2</div>
                    <div class="draggable directeds">Course 3</div>
                    <div class="draggable directeds">Course 4</div>
                </div>
                <div id="tabs-2">
                    <!--Electives tab -->
                    <div class="ui-widget">

                        <!--Search box under electives tab -->
                        <label for="searchBox">Search: </label>
                        <input id="searchBox">

                        <!--Enables interactive menu that drops down when clicks -->
                        <div id="accordion">

                            @foreach (var item in Model)
                            {
                                <h3> @Html.DisplayFor(modelItem => item.StudyAreaName)</h3>
                                <div class="accordions">
                                    @foreach (var abbr in item.Abbrevations)
                                    {
                                        <h4>@Html.DisplayFor(modelItem => abbr.AbbrevName)</h4>
                                        <div class="subAccordion">
                                            @foreach (var course in abbr.Courses)
                                            {
                                                var courseCode = @Html.DisplayFor(modelItem => course.CourseCode);
                                                <div id=@courseCode class="draggable electives">@courseCode</div>
                                            }
                                            
                                        </div>
                                    }
                                </div>
                            }
                        </div>

                    </div>
                </div>

                <div id="tabs-3">
                    <!--Menu on left of page that has page options for the user -->
                    <div id="optionsMenu">
                        <input type="number" min="1" max="5" value="4" id="newNumOfSubjects" />
                        <input type="button" id="btnPicker" value="Update" />
                        <input type="hidden" name="oldNumOfSubjects" id="oldNumOfSubjects" value="@ViewBag.SubjectsPerSemester" />
                        <input type="hidden" name="unitsPerDegreeOriginal" id="unitsPerDegreeOriginal" value="@ViewBag.UnitsPerDegree" />
                        <input type="hidden" name="unitsPerDegree" id="unitsPerDegree" value="@ViewBag.UnitsPerDegree" />
                        
                        <input type="button" id="btnAddCourse" value="Add Course" />
                        <input type="button" id="btnRemoveCourse" value="Remove Course" />
                    </div>

                    <!--Form for submitting page and saving grid to a user account -->
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <form class="form-group">
                            <input type="hidden" name="InputData" id="courseInput" />
                            <input type="submit" value="Index" class="btn btn-default" id="btnPicker" />
                        </form>
                    }


                </div>
            </div>
        </div>

        <!--Main plan grid -->
        <div id="plan" class="col-md-9">

            <div id="semester1Name" class="semesterName col-md-offset-1">Semester 1</div>
            <div id="semester2Name" class="semesterName col-md-offset-1">Semester 2</div>

            <div class="row">
                <div id="semester1Box" class="col-md-offset-1 semesterBox"></div>
                <div id="semester2Box" class="col-md-offset-1 semesterBox"></div>
            </div>

            <div class="row" id="rowYearInnerPlan">
                <ul id="yearNameColumn" class="col-md-1">
                    @for (var i = 1; i <= @ViewBag.UnitsPerDegree / 80; i++)
                    {
                        <li class="yearNames">Year @i</li>
                    }
                </ul>

                <div class="col-md-11" id="colInnerPlan">
                    <div id="innerPlan">
                        @for (var i = 1; i <= @ViewBag.UnitsPerDegree / 80; i++)
                        {
                            for (var y = 1; y <= @ViewBag.SubjectsPerSemester * 2; y++)
                            {
                                <div class="courseBox droppable">Course @y</div>
                            }
                        }
                    </div>
                </div>

            </div>
        </div>

    </div>



    <script type="text/javascript">
        //set-up script
        $(function () {
            //sets grid width depending on how many items to be displayed
            var planWidth = 2 * $("#oldNumOfSubjects").val() * 103;
            $("#innerPlan").css("width", planWidth);

            //whole box that contains grid and year/column headings, set height depending on num of years in degree
            var planHeight = $("#unitsPerDegree").val() / 80 * 107 + 30;
            $("#plan").css("height", planHeight);

            $(".semesterBox").css("width", planWidth / 2 + 3);

            //enable grid to work
            $('#innerPlan').shapeshift({
                gutterX: 5,
            });

            //set initial values
            var courseText = "";
            $(".courseBox").each(function () {
                courseText = courseText + $(this).text() + ",";
            });
            $("#courseInput").val(courseText);

            //tabbed menu
            $(function () {
                $("#tabs").tabs();
            });

        });

    </script>

    <script>
        //every time a box is dropped and dragged, loop through all the boxes and reset the value of the hidden field that stores the
        //html values of all the boxes. when submit button is clicked, that value is sent through to the plancontroller.

        $container = $("#innerPlan");
        $container.on("ss-rearranged", function (e, selected) {
            var courseText = "";
            $(".courseBox").each(function () {
                courseText = courseText + $(this).text() + ",";
            });
            $("#courseInput").val(courseText);
        });
    </script>

    <script>
        //on click to change number of subjects per semester
        $("#btnPicker").click(function () {

            var oldNumber = $("#oldNumOfSubjects").val();
            var newNumber = $("#newNumOfSubjects").val();
            var difference = newNumber - oldNumber;

            if (difference != 0) {//if a change was actually made
                //change width to fit new number of courseBoxes
                var planWidth = 2 * newNumber * 103;
                if (newNumber == 1 || newNumber == 2 || newNumber == 3) {
                    planWidth = planWidth + 11;
                }
                $("#innerPlan").css("width", planWidth);

                //new number of years the degree will now take
                var newYears = Math.ceil($("#unitsPerDegree").val() / (newNumber * 20));

                //new height of plan div
                var planHeight = newYears * 107 + 30;
                $("#plan").css("height", planHeight);

                //fill in extra or less years on the side column
                $(".yearNames").remove();
                for (var i = 1; i <= newYears; i++) {
                    $("#yearNameColumn").append(" <li class='yearNames'>Year " + i + "</li>");
                }

                //change position of semester name headings
                var semester1NameLeft;
                var semester2NameLeft;
                //depending on how many courses per semester, push the headings along a different amount
                switch (newNumber) {
                    case "1":
                        semester1NameLeft = -2;
                        semester2NameLeft = -87;
                        break;
                    case "2":
                        semester1NameLeft = 55;
                        semester2NameLeft = 70;
                        break;
                    case "3":
                        semester1NameLeft = 102;
                        semester2NameLeft = 217;
                        break;
                    case "4":
                        semester1NameLeft = 155;
                        semester2NameLeft = 365;
                        break;
                    case "5":
                        semester1NameLeft = 202;
                        semester2NameLeft = 520;
                        break;
                    default:
                        semester1NameLeft = 0;
                        semester2NameLeft = 0;

                }
                $("#semester1Name").css("left", semester1NameLeft);
                $("#semester2Name").css("left", semester2NameLeft);

                //semester background box colour divs
                $(".semesterBox").css("width", planWidth / 2 + 3);
                $("#semester2Box").css("left", planWidth / 2 - 12);

                $("#oldNumOfSubjects").val(newNumber);

                $('#innerPlan').shapeshift({
                    gutterX: 5,
                });
            }

        });        
        
    </script>


    <script>
        //search box
        $(function () { 
            var availableTags = @Html.Raw(Json.Encode(ViewBag.CourseCodeList));         
            
            $("#searchBox").autocomplete({
                source: availableTags
            });
        });

        $("#searchBox").on("autocompleteselect", function (event, ui) {
            //$(".accordions").accordion("active", '.accordions > div:has(#ARCH1001) > h3');
            var courseSelected = "#" + ui.item.value;   //select the course we want
            $("#courseInput").val(courseSelected);

            //outside accordion
            var studyArea = $(courseSelected).parent().parent(); //get the study area div
            //get the index of the study area div so that the accordion can use it
            var studyAreaIndex = $('#accordion .accordions').index(studyArea);
            $("#accordion").accordion("option", "active", studyAreaIndex); //activate study area accordion (outside accordion)

            
            //inner accordion
            var abbr = $(courseSelected).parent();
            var abbrSelector = studyArea.find(".subAccordion");
            var abbrIndex = abbrSelector.index(abbr);
            studyArea.accordion("option", "active", abbrIndex);

            //change colour of selected course for a couple of seconds just to make it more obvious
            var el = $(courseSelected),
                x = 2000,
                originalColor = el.css("background");

            el.css("background", "yellow");
            setTimeout(function () {
                el.css("background", originalColor);
            }, x);


        });
    </script>

    <script>
        //accordian
        $(function () {
            $("#accordion").accordion({
                heightStyle: "content",
                collapsible: true,
                active: false,
            });
            $(".accordions").accordion({
                heightStyle: "content",
                collapsible: true,
                active: false,
            });

        });
    </script>

    <script>
        //drag and drog
        $(function () {
            $(".draggable").draggable({
                appendTo: "body",
                helper: "clone"
            });
            $(".droppable").droppable({
                accept: ".draggable",
                drop: function (event, ui) {
                    $(this).html($(ui.draggable).text());
                }
            });
        });
    </script>

    <script>
        //when a courseBox is clicked, send focus to the search box
        $(".courseBox").click(function () {
            $("#tabs").tabs({
                active: 1
            });
            $('#searchBox').focus();

        });
    </script>

    <script>
        //add new course on click
        $("#btnAddCourse").click(function () {
            $("#innerPlan").append("<div class='courseBox droppable'>Empty Course</div>");                     

            //fill in extra or less years on the side column
            $(".yearNames").remove();
            $("#unitsPerDegree").val(parseInt($("#unitsPerDegree").val()) + 10);
            var newYears = Math.ceil($("#unitsPerDegree").val() / (($("#newNumOfSubjects").val() * 20)));
            for (var i = 1; i <= newYears; i++) {
                $("#yearNameColumn").append(" <li class='yearNames  '>Year " + i + "</li>");
            }

            $('#innerPlan').shapeshift({
                gutterX: 5,
            });

        });

        //remove a course on click
        $("#btnRemoveCourse").click(function () {
            //only remove a subject if the result will not be less than the min required number of subjects for the course
            if ($("#unitsPerDegreeOriginal").val() < $("#unitsPerDegree").val()) {
                $(".courseBox").last().remove();

                //fill in extra or less years on the side column
                $(".yearNames").remove();
                $("#unitsPerDegree").val(parseInt($("#unitsPerDegree").val()) - 10);
                var newYears = Math.ceil($("#unitsPerDegree").val() / (($("#newNumOfSubjects").val() * 20)));
                for (var i = 1; i <= newYears; i++) {
                    $("#yearNameColumn").append(" <li class='yearNames  '>Year " + i + "</li>");
                }

                $('#innerPlan').shapeshift({
                    gutterX: 5,
                });
            }
        });
        
    </script>

</body>
=======
ï»¿@model IEnumerable<ProgramPlanner.Models.StudyArea>

@{
    Layout = null;

}

<!DOCTYPE html>
<!-- -->
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Uni Plan</title>

    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/Plan.css")
    <link rel="stylesheet" href="~/Content/jquery-ui.min.css">
</head>
<body>
    <script src="~/Content/scripts/jquery.js"></script>
    <script src="~/Content/scripts/jquery-ui.min.js"></script>
    <script src="~/Content/scripts/jquery.shapeshift.js"></script>

    <div id="headerRow" class="row">
        <div id="imgHeaderContainer" class="col-md-2 col-md-offset-1">
            <img id="imgHeader" src="~/Content/images/adaymaycome.jpg" />
        </div>
        <h1>Various Instructions and pictures shall go here</h1>
    </div>
    <!--Row at top that contains the semester heading names -->
    <div id="semesterRow" class="row">

    </div>

    <div id="mainRow" class="row">
        <!--Main row with most page items-->
        <!--Main menu on right of page -->
        <div id="planMenu" class="col-md-3">
            <div id="tabs">
                <ul>
                    <li><a href="#tabs-1">Directed MIcah has a Small Penis</a></li>
                    <li><a href="#tabs-2">Electives, He call his boyfriend Boris the Mighty</a></li>
                    <li><a href="#tabs-3">Options</a></li>
                </ul>
                <div id="tabs-1">
                    <!--Directeds tab -->
                    <div class="draggable directeds">Course 1</div>
                    <div class="draggable directeds">Course 2</div>
                    <div class="draggable directeds">Course 3</div>
                    <div class="draggable directeds">Course 4</div>
                </div>
                <div id="tabs-2">
                    <!--Electives tab -->
                    <div class="ui-widget">

                        <!--Search box under electives tab -->
                        <label for="searchBox">Search: </label>
                        <input id="searchBox">

                        <!--Enables interactive menu that drops down when clicks -->
                        <div id="accordion">

                            @foreach (var item in Model)
                            {
                                <h3> @Html.DisplayFor(modelItem => item.StudyAreaName)</h3>
                                <div class="accordions">
                                    @foreach (var abbr in item.Abbrevations)
                                    {
                                        <h4>@Html.DisplayFor(modelItem => abbr.AbbrevName)</h4>
                                        <div class="subAccordion">
                                            @foreach (var course in abbr.Courses)
                                            {
                                                var courseCode = @Html.DisplayFor(modelItem => course.CourseCode);
                                                <div id=@courseCode class="draggable electives">@courseCode</div>
                                            }
                                            
                                        </div>
                                    }
                                </div>
                            }
                        </div>

                    </div>
                </div>

                <div id="tabs-3">
                    <!--Menu on left of page that has page options for the user -->
                    <div id="optionsMenu">
                        <input type="number" min="1" max="5" value="4" id="newNumOfSubjects" />
                        <input type="button" id="btnPicker" value="Update" />
                        <input type="hidden" name="oldNumOfSubjects" id="oldNumOfSubjects" value="@ViewBag.SubjectsPerSemester" />
                        <input type="hidden" name="unitsPerDegreeOriginal" id="unitsPerDegreeOriginal" value="@ViewBag.UnitsPerDegree" />
                        <input type="hidden" name="unitsPerDegree" id="unitsPerDegree" value="@ViewBag.UnitsPerDegree" />
                        
                        <input type="button" id="btnAddCourse" value="Add Course" />
                        <input type="button" id="btnRemoveCourse" value="Remove Course" />
                    </div>

                    <!--Form for submitting page and saving grid to a user account -->
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <form class="form-group">
                            <input type="hidden" name="InputData" id="courseInput" />
                            <input type="submit" value="Index" class="btn btn-default" id="btnPicker" />
                        </form>
                    }


                </div>
            </div>
        </div>

        <!--Main plan grid -->
        <div id="plan" class="col-md-9">

            <div id="semester1Name" class="semesterName col-md-offset-1">Semester 1</div>
            <div id="semester2Name" class="semesterName col-md-offset-1">Semester 2</div>

            <div class="row">
                <div id="semester1Box" class="col-md-offset-1 semesterBox"></div>
                <div id="semester2Box" class="col-md-offset-1 semesterBox"></div>
            </div>

            <div class="row" id="rowYearInnerPlan">
                <ul id="yearNameColumn" class="col-md-1">
                    @for (var i = 1; i <= @ViewBag.UnitsPerDegree / 80; i++)
                    {
                        <li class="yearNames">Year @i</li>
                    }
                </ul>

                <div class="col-md-11" id="colInnerPlan">
                    <div id="innerPlan">
                        @for (var i = 1; i <= @ViewBag.UnitsPerDegree / 80; i++)
                        {
                            for (var y = 1; y <= @ViewBag.SubjectsPerSemester * 2; y++)
                            {
                                <div class="courseBox droppable">Course @y</div>
                            }
                        }
                    </div>
                </div>

            </div>
        </div>

    </div>



    <script type="text/javascript">
        //set-up script
        $(function () {
            //sets grid width depending on how many items to be displayed
            var planWidth = 2 * $("#oldNumOfSubjects").val() * 103;
            $("#innerPlan").css("width", planWidth);

            //whole box that contains grid and year/column headings, set height depending on num of years in degree
            var planHeight = $("#unitsPerDegree").val() / 80 * 107 + 30;
            $("#plan").css("height", planHeight);

            $(".semesterBox").css("width", planWidth / 2 + 3);

            //enable grid to work
            $('#innerPlan').shapeshift({
                gutterX: 5,
            });

            //set initial values
            var courseText = "";
            $(".courseBox").each(function () {
                courseText = courseText + $(this).text() + ",";
            });
            $("#courseInput").val(courseText);

            //tabbed menu
            $(function () {
                $("#tabs").tabs();
            });

        });

    </script>

    <script>
        //every time a box is dropped and dragged, loop through all the boxes and reset the value of the hidden field that stores the
        //html values of all the boxes. when submit button is clicked, that value is sent through to the plancontroller.

        $container = $("#innerPlan");
        $container.on("ss-rearranged", function (e, selected) {
            var courseText = "";
            $(".courseBox").each(function () {
                courseText = courseText + $(this).text() + ",";
            });
            $("#courseInput").val(courseText);
        });
    </script>

    <script>
        //on click to change number of subjects per semester
        $("#btnPicker").click(function () {

            var oldNumber = $("#oldNumOfSubjects").val();
            var newNumber = $("#newNumOfSubjects").val();
            var difference = newNumber - oldNumber;

            if (difference != 0) {//if a change was actually made
                //change width to fit new number of courseBoxes
                var planWidth = 2 * newNumber * 103;
                if (newNumber == 1 || newNumber == 2 || newNumber == 3) {
                    planWidth = planWidth + 11;
                }
                $("#innerPlan").css("width", planWidth);

                //new number of years the degree will now take
                var newYears = Math.ceil($("#unitsPerDegree").val() / (newNumber * 20));

                //new height of plan div
                var planHeight = newYears * 107 + 30;
                $("#plan").css("height", planHeight);

                //fill in extra or less years on the side column
                $(".yearNames").remove();
                for (var i = 1; i <= newYears; i++) {
                    $("#yearNameColumn").append(" <li class='yearNames'>Year " + i + "</li>");
                }

                //change position of semester name headings
                var semester1NameLeft;
                var semester2NameLeft;
                //depending on how many courses per semester, push the headings along a different amount
                switch (newNumber) {
                    case "1":
                        semester1NameLeft = -2;
                        semester2NameLeft = -87;
                        break;
                    case "2":
                        semester1NameLeft = 55;
                        semester2NameLeft = 70;
                        break;
                    case "3":
                        semester1NameLeft = 102;
                        semester2NameLeft = 217;
                        break;
                    case "4":
                        semester1NameLeft = 155;
                        semester2NameLeft = 365;
                        break;
                    case "5":
                        semester1NameLeft = 202;
                        semester2NameLeft = 520;
                        break;
                    default:
                        semester1NameLeft = 0;
                        semester2NameLeft = 0;

                }
                $("#semester1Name").css("left", semester1NameLeft);
                $("#semester2Name").css("left", semester2NameLeft);

                //semester background box colour divs
                $(".semesterBox").css("width", planWidth / 2 + 3);
                $("#semester2Box").css("left", planWidth / 2 - 12);

                $("#oldNumOfSubjects").val(newNumber);

                $('#innerPlan').shapeshift({
                    gutterX: 5,
                });
            }

        });        
        
    </script>


    <script>
        //search box
        $(function () { 
            var availableTags = @Html.Raw(Json.Encode(ViewBag.CourseCodeList));         
            
            $("#searchBox").autocomplete({
                source: availableTags
            });
        });

        $("#searchBox").on("autocompleteselect", function (event, ui) {
            //$(".accordions").accordion("active", '.accordions > div:has(#ARCH1001) > h3');
            var courseSelected = "#" + ui.item.value;   //select the course we want
            $("#courseInput").val(courseSelected);

            //outside accordion
            var studyArea = $(courseSelected).parent().parent(); //get the study area div
            //get the index of the study area div so that the accordion can use it
            var studyAreaIndex = $('#accordion .accordions').index(studyArea);
            $("#accordion").accordion("option", "active", studyAreaIndex); //activate study area accordion (outside accordion)

            
            //inner accordion
            var abbr = $(courseSelected).parent();
            var abbrSelector = studyArea.find(".subAccordion");
            var abbrIndex = abbrSelector.index(abbr);
            studyArea.accordion("option", "active", abbrIndex);

            //change colour of selected course for a couple of seconds just to make it more obvious
            var el = $(courseSelected),
                x = 2000,
                originalColor = el.css("background");

            el.css("background", "yellow");
            setTimeout(function () {
                el.css("background", originalColor);
            }, x);


        });
    </script>

    <script>
        //accordian
        $(function () {
            $("#accordion").accordion({
                heightStyle: "content",
                collapsible: true,
                active: false,
            });
            $(".accordions").accordion({
                heightStyle: "content",
                collapsible: true,
                active: false,
            });

        });
    </script>

    <script>
        //drag and drog
        $(function () {
            $(".draggable").draggable({
                appendTo: "body",
                helper: "clone"
            });
            $(".droppable").droppable({
                accept: ".draggable",
                drop: function (event, ui) {
                    $(this).html($(ui.draggable).text());
                }
            });
        });
    </script>

    <script>
        //when a courseBox is clicked, send focus to the search box
        $(".courseBox").click(function () {
            $("#tabs").tabs({
                active: 1
            });
            $('#searchBox').focus();

        });
    </script>

    <script>
        //add new course on click
        $("#btnAddCourse").click(function () {
            $("#innerPlan").append("<div class='courseBox droppable'>Empty Course</div>");                     

            //fill in extra or less years on the side column
            $(".yearNames").remove();
            $("#unitsPerDegree").val(parseInt($("#unitsPerDegree").val()) + 10);
            var newYears = Math.ceil($("#unitsPerDegree").val() / (($("#newNumOfSubjects").val() * 20)));
            for (var i = 1; i <= newYears; i++) {
                $("#yearNameColumn").append(" <li class='yearNames  '>Year " + i + "</li>");
            }

            $('#innerPlan').shapeshift({
                gutterX: 5,
            });

        });

        //remove a course on click
        $("#btnRemoveCourse").click(function () {
            //only remove a subject if the result will not be less than the min required number of subjects for the course
            if ($("#unitsPerDegreeOriginal").val() < $("#unitsPerDegree").val()) {
                $(".courseBox").last().remove();

                //fill in extra or less years on the side column
                $(".yearNames").remove();
                $("#unitsPerDegree").val(parseInt($("#unitsPerDegree").val()) - 10);
                var newYears = Math.ceil($("#unitsPerDegree").val() / (($("#newNumOfSubjects").val() * 20)));
                for (var i = 1; i <= newYears; i++) {
                    $("#yearNameColumn").append(" <li class='yearNames  '>Year " + i + "</li>");
                }

                $('#innerPlan').shapeshift({
                    gutterX: 5,
                });
            }
        });
        
    </script>

</body>
>>>>>>> Stashed changes
</html>